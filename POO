# üéâ Introducci√≥n a la Programaci√≥n Orientada a Objetos (POO)

La programaci√≥n orientada a objetos (POO) es un paradigma fundamental que nos ayuda a organizar y estructurar nuestro c√≥digo. A trav√©s de este enfoque, podemos crear **clases** y **objetos** que representan entidades del mundo real.

## üìú Historia Breve

La programaci√≥n orientada a objetos (POO) fue desarrollada en la d√©cada de 1960 y se populariz√≥ en los a√±os 80 con lenguajes como Smalltalk y C++. Este enfoque revolucion√≥ la forma en que los programadores estructuran y organizan su c√≥digo, permitiendo una mejor modularidad y reutilizaci√≥n. Hoy en d√≠a, lenguajes como Java, C++, y Python incorporan principios de POO, convirti√©ndola en una metodolog√≠a fundamental en el desarrollo de software moderno.

## üîë Conceptos Clave

### 1. Clases y Objetos
- **Clase**: Es un plano o plantilla para crear objetos. Define propiedades y m√©todos.
- **Objeto**: Es una instancia de una clase. Por ejemplo, si tenemos una clase `Coche`, un objeto podr√≠a ser `miCoche`.

### 2. Abstracci√≥n
La abstracci√≥n es el proceso de ocultar los detalles complejos y mostrar solo la funcionalidad esencial de un objeto. Permite enfocarse en lo que un objeto hace en lugar de c√≥mo lo hace.

### 3. Encapsulamiento
El encapsulamiento es la pr√°ctica de restringir el acceso a ciertos componentes de un objeto, lo que ayuda a proteger el estado interno del objeto.

### 4. Herencia
La herencia permite que una clase (subclase) herede propiedades y m√©todos de otra clase (superclase). Esto promueve la reutilizaci√≥n del c√≥digo.

### 5. Polimorfismo
El polimorfismo permite que m√©todos en diferentes clases tengan el mismo nombre pero se comporten de manera diferente. Esto facilita la extensibilidad del c√≥digo.

## üìö Recursos Adicionales
- Por si no te va bien lo de entender muy bien Java no te preocupes aqui te dejo algunos videos que me han ayudado: 
https://www.youtube.com/watch?v=W86KTBSiX2o&t=1818s
- Aqui te dejo otro video que tambien me ha servido (incluye POO):
https://www.youtube.com/watch?v=Bi9AmOBDJGY

## ‚ùì Preguntas Frecuentes
- **¬øQu√© es un constructor?**
  - Un constructor es un m√©todo especial que se llama al crear un objeto de una clase.
- **¬øQu√© es la diferencia entre abstracci√≥n y encapsulamiento?**
  - La abstracci√≥n se centra en ocultar la complejidad y mostrar solo lo esencial, mientras que el encapsulamiento se enfoca en proteger el acceso a los datos de un objeto.
